// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
//provider = "mysql"
  url      = env("DATABASE_URL")
}
model Post {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Service {
  id                 Int      @id @default(autoincrement())
  name               String
  name_slug          String
  title              String?
  code               String?
  price              Float   
  description        String?
  discount           Float?  
  image              String?
  icon               String?
  userId             String     // References one specific user (modified)
  user               User?   @relation(fields: [userId], references: [id]) // Relation to User
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @default(cuid()) @id
  user_name     String?
  email         String?   @unique
  password      String
  phone         String
  confirmed_password      String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  emailVerified DateTime?
  image         String?
  role          String?
  posts         Post[]
  services  Service[]
  @@map(name: "users")
   accounts      Account[]
  sessions      Session[]

}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
